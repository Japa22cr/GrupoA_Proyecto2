[
  {
    "ContainingType": "API_Practica_1.Controllers.AuthController",
    "Method": "ForgotPassword",
    "RelativePath": "api/Auth/ForgotPassword",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "DTOs.ForgotPasswordDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Practica_1.Controllers.AuthController",
    "Method": "GenerateResetToken",
    "RelativePath": "api/Auth/GenerateResetToken",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Practica_1.Controllers.AuthController",
    "Method": "GetAllUsers",
    "RelativePath": "api/Auth/GetAllUsers",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Practica_1.Controllers.AuthController",
    "Method": "GetUserInfo",
    "RelativePath": "api/Auth/GetUserInfo",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "username",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Practica_1.Controllers.AuthController",
    "Method": "GetUserRoles",
    "RelativePath": "api/Auth/GetUserRoles",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userName",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Practica_1.Controllers.AuthController",
    "Method": "InternalRegister",
    "RelativePath": "api/Auth/InternalRegister",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "newUser",
        "Type": "DTOs.InternalRegisterDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Practica_1.Controllers.AuthController",
    "Method": "Login",
    "RelativePath": "api/Auth/Login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userData",
        "Type": "DTOs.LoginDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Practica_1.Controllers.AuthController",
    "Method": "MakeAdmin",
    "RelativePath": "api/Auth/MakeAdmin",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userName",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Practica_1.Controllers.AuthController",
    "Method": "Register",
    "RelativePath": "api/Auth/Register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "newUser",
        "Type": "DTOs.LogUpDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Practica_1.Controllers.AuthController",
    "Method": "ResetPassword",
    "RelativePath": "api/Auth/ResetPassword",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "DTOs.ResetPasswordDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Practica_1.Controllers.AuthController",
    "Method": "VerifyCode",
    "RelativePath": "api/Auth/VerifyCode",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "DTOs.TwoFactorDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Practica_1.Controllers.ExerciseController",
    "Method": "AddExercise",
    "RelativePath": "api/Exercise/AddExercise",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "exercise",
        "Type": "DTOs.ExerciseDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Practica_1.Controllers.ExerciseController",
    "Method": "GetAllExercises",
    "RelativePath": "api/Exercise/GetAllExercises",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "DTOs.ExerciseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API_Practica_1.Controllers.ExerciseController",
    "Method": "GetExerciseById",
    "RelativePath": "api/Exercise/GetExerciseById",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "DTOs.ExerciseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API_Practica_1.Controllers.FinesController",
    "Method": "AddFine",
    "RelativePath": "api/Fines",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "DTOs.FineDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Practica_1.Controllers.FinesController",
    "Method": "GetFinesByUser",
    "RelativePath": "api/Fines",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userin",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Practica_1.Controllers.LecturaPlaca",
    "Method": "Upload",
    "RelativePath": "api/LecturaPlaca",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "file",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Practica_1.Controllers.UserController",
    "Method": "GetAllUsers",
    "RelativePath": "api/User/GetAllUsers",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Practica_1.Controllers.VehiculosController",
    "Method": "RegistrarVehiculo",
    "RelativePath": "api/Vehiculos",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "vehiculo",
        "Type": "DTOs.Vehiculo",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "DTOs.Vehiculo",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API_Practica_1.Controllers.VehiculosController",
    "Method": "ObtenerVehiculo",
    "RelativePath": "api/Vehiculos/{placa}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "placa",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "DTOs.Vehiculo",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API_Practica_1.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[API_Practica_1.WeatherForecast, API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]